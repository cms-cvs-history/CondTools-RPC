process ProcessOne = {
 service = MessageLogger {
    untracked vstring destinations = {"cout"}
    untracked PSet cout = {
          untracked  PSet default = { untracked int32 limit = 0 }
    }
 }

//Subproject specific modules
     source = EmptyIOVSource {
         string timetype = "runnumber"
         untracked uint32 firstRun = 1
         untracked uint32 lastRun = 1
         uint32 interval = 1
       }


//PopCon config
include "CondCore/DBCommon/data/CondDBCommon.cfi"
// eg to write the objects in oracle

replace CondDBCommon.connect = "oracle://devdb10/CMS_RPC_COMM_DATA"
replace CondDBCommon.DBParameters.authenticationPath = "."
replace CondDBCommon.DBParameters.messageLevel=3
// Database output service
    service = PoolDBOutputService{
	using CondDBCommon
	VPSet toPut = { { string record = "RPCdbDataRcd" string tag = "RPC_tag1" } }
        //official log db is to be defined by policy. 
        // should beCMS_COND_GENERAL schema in official db
	//untracked string logconnect = "sqlite_file:log.db"
	untracked string logconnect = "oracle://devdb10/CMS_RPC_COMM_DATA"
   }


//Common parameters to all subprojects
module Test1 = RPCPopConAnalyzer {
   string record = "RPCdbDataRcd"
   untracked bool loggingOn = True
   bool SinceAppendMode = true
   untracked string host = 'oracle://omds/RPC_CONDITION'
   untracked string user = 'RPC_CONDITION'
   untracked string passw = 'take_data'
   PSet Source ={}
}
 path p = {Test1}
}

